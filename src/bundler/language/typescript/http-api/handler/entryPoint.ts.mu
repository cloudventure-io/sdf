/**
 * ATTENTION: This file was generated by @cloudventure/sdf package
 * and it will be regenerated when the stack is synthesized.
 */
import {
  ConstructServerRequest,
  HttpApiServer,
  HttpApiServerHandler,
} from "@cloudventure/sdf/http-api/runtime/server/HttpApiServer"

import * as validators from "./{{ ValidatorsImport }}";
import { handler } from "./{{ HandlerImport }}";
{{~#if MiddlewareImport}}
import middleware from "./{{ MiddlewareImport }}";
{{/if}}

import * as Operation from "./{{ OperationImport }}";

export type OperationRequest = ConstructServerRequest<Operation.Request>
export type OperationResponse = Operation.Response

export type ServerOperation = {
  request: OperationRequest
  response: OperationResponse
}

export type OperationHandler = HttpApiServerHandler<ServerOperation>

const server = new HttpApiServer<ServerOperation>({
  operation: Operation.operation,
  handler,
  validators,
{{#if MiddlewareImport}}
  middleware,
{{/if}}
})

export const {{ EntryPointFunctionName }} = server.createLambdaHandler();
